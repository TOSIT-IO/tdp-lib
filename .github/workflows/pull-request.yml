name: Pull Request

on: pull_request

jobs:

  license-headers:
    name: Check license headers
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Check license headers
      uses: kt3k/license_checker@v1.0.6

  conventional-commits:
    name: Check conventional commits
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check conventional commits
        uses: webiny/action-conventional-commits@v1.0.3

  black:
    name: Check format with Black
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check code formatting with Black
        uses: psf/black@stable
        with:
          options: "--check --verbose"
  
  ruff:
    name: Check linting with Ruff
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check code linting with Ruff
        uses: chartboost/ruff-action@v1
        with:
          version: 0.0.285

  pytest:
    name: Run pytest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up python 3.9
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction -vvv
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tdp
